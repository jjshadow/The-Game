import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;



public class Nothing extends GameObject{
	
	private int [][] arr;
	
	private int level;
	
	private ArrayList<Wall> theWalls;
	
	private int[] wallData;
	
	
	
	public Nothing(int x, int y, ID id)
	{
		super(x, y, id);
		
		theWalls = new ArrayList<Wall>(441);
		
		arr = new int [21][21];
		
		
		
	}
	
	public Nothing(int level)
	{
		super(0,0,ID.Static);
		this.level = level;
		//this.clear();
		
		arr = new int [21][21];
		this.level1();
		
		
		
		
	
		theWalls = new ArrayList<Wall>(441);
	}

	
	public boolean isOutOfBounds()
	{						
		return false;
	}
	
	public void tick()
	{
		
	}

	public ArrayList<Wall> getTheWalls()
	{
		return theWalls;
	}
	
	public Wall getTheWallAt(int x)
	{
		return theWalls.get(x);
	}
	
	public void render(Graphics g)
	{
		
		
		g.setColor(Color.BLACK);
	
		for (int x = 0; x < wallData.length ; x++)
		{
			if(wallData[x] == 0)
			{
				int posX = 0;
				int posY = 0;
				
				posX = (x / 20) *25;
				
				posY = (x / 20)*25;
				
				g.fillRect(posX, posY, 25, 25);
			}
		}
		
	}
	public void clear()
	{
		for(int x = 0; x < wallData.length; x++)
		{
		  wallData[x] = 0;
		}
	}
	
	
	
	private void clearArrayList()
	{
		theWalls.clear();			
	}
	
	
	private void fillArray()
	{
		for (int x = 0; x < wallData.length; x++)
		{
			if (wallData[x] != 0 && wallData[x] != 2)
			{
				wallData[x] = 1;
			}
		}
	}
	
	
	private ArrayList<Wall> generateLevel()
	{
		
		int posX = 0;
		int posY = 0;
		
		this.clearArrayList();
		this.clear();
		
		for (int x = 0; x < wallData.length; x++)
		{
			if (wallData[x] == 1)
			{								
					posX = (x / 20) *25;
												
					posY = (x / 20)*25;
				
				
				theWalls.add(x, new Wall(posX, posY));
			}
		}
		
		
		return null;
		
	}
	
	
	
	
	
	
	public void level1()
	{
		//sets all to 0 (nothing there)
		//this.clear();
		
		wallData = new int[440];
		
		wallData[1] = 0;
		wallData[22] = 0;
		wallData[43] = 0;
		wallData[44] = 0;
		wallData[45] = 0;
		wallData[46] = 2;
		
		this.fillArray();
		
		
		
		theWalls = new ArrayList<Wall>(440);
		
		
		
		this.generateLevel();
		
		
		arr[2][0] = 1;
		arr[2][1] = 1;
		arr[2][2] = 1;
		arr[2][3] = 1;
		arr[2][4] = 1;
		arr[3][4] = 1;
		arr[4][4] = 1;
		arr[5][4] = 1;
	}
}
